---
description:
globs:
alwaysApply: true
---
@file ../tasks/tasks.md
@file ../docs/progress.md
@file ../docs/tech-stack.md
@file ../docs/architecture.mermaid

# Task Management

## Task Workflow

**Required Files:**

*   `tasks/tasks.md`: Source of task definitions
*   `docs/progress.md`: Progress tracking
*   `docs/tech-stack.md`: Implementation guidelines
*   `docs/architecture.mermaid`: Architecture reference for validation

**Workflow Steps:**

1.  **Read Task:** READ `tasks/tasks.md`:
    *   Parse current task requirements.
    *   Extract acceptance criteria.
    *   Identify dependencies.
    *   Verify that a feature branch named for the task exists. If it does not, create it and make sure development takes place in that branch.

2.  **Validate Architecture:** VALIDATE against `docs/architecture.mermaid`:
    *   Confirm architectural alignment.
    *   Check component interactions.

3.  **Update Progress:** UPDATE `docs/progress.md`:
    *   Mark task as in-progress.
    *   Track completion of sub-tasks.
    *   Document any blockers encountered.

4.  **Implement (TDD):** IMPLEMENT following Test-Driven Development:
    *   Create test files first (`*.spec.ts` or `*.test.ts`).
    *   Implement functionality to pass the tests.
    *   Update task status upon test completion and successful implementation.
    *   Merge the feature branch back into the development branch.
